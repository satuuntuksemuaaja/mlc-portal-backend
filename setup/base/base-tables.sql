-- Extention for UUID
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Organisation status enum
CREATE TYPE SCHEMA_NAME."org_status" AS ENUM (
  'active',
  'paused',
  'cancelled'
);

-- Client status enum
CREATE TYPE SCHEMA_NAME."client_status" AS ENUM (
  'pending',
  'cancelled',
  'active',
  'archived'
);

-- Agent status enum
CREATE TYPE SCHEMA_NAME."agent_status" AS ENUM (
  'active',
  'archived'
);

-- Clientterm status enum
CREATE TYPE SCHEMA_NAME."clientterm_status" AS ENUM (
  'active',
  'expired'
);

-- System table
CREATE TABLE SCHEMA_NAME."system" (
    "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "up" boolean
);

-- The organisation table
CREATE TABLE SCHEMA_NAME."organisation" (
    "id" uuid DEFAULT uuid_generate_v4 (),
    "serviceId" varchar,
    "name" varchar(256),
    "status" SCHEMA_NAME.org_status,
    "key" varchar(16),
    "websiteUrl" varchar(1024),
    "primaryDomain" varchar(256) unique,
    "logoThumbnail" text,
    "signupKey" text,
    "bffRegistered" boolean,
    "welcomeMessageTemplate" text,
    PRIMARY KEY (id)
);

-- Roles for the organisation
CREATE TABLE SCHEMA_NAME."role" (
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "orgId" uuid not null,
    "name" varchar(256),
    "created" timestamp,
    "lastModified" timestamp
);
ALTER TABLE SCHEMA_NAME."role" ADD FOREIGN KEY ("orgId") REFERENCES SCHEMA_NAME."organisation" ("id");


-- Agents (users) for the organisation
CREATE TABLE SCHEMA_NAME."agent" (
    "id" uuid DEFAULT uuid_generate_v4 (),
    "roleId" bigint not null,
    "orgId" uuid not null,
    "name" varchar(256),
    "email" varchar(1024) unique,
    "phone" varchar(10),
    "status" SCHEMA_NAME.agent_status,
    "photo" text,
    "created" timestamp,
    "lastModified" timestamp,
    PRIMARY KEY (id)
);
ALTER TABLE SCHEMA_NAME."agent" ADD FOREIGN KEY ("orgId") REFERENCES SCHEMA_NAME."organisation" ("id");
ALTER TABLE SCHEMA_NAME."agent" ADD FOREIGN KEY ("roleId") REFERENCES SCHEMA_NAME."role" ("id");

-- Client (users) for the agent's organisation.
CREATE TABLE SCHEMA_NAME."client" (
    "id" uuid DEFAULT uuid_generate_v4 (),
    "orgId" uuid,
    "serviceId" varchar,
    "vaultId" varchar,
    "name" varchar(256),
    "email" varchar(1024) unique,
    "status" SCHEMA_NAME.client_status,
    "phone" varchar(10),
    "ref" text,
    "notes" text,
    "created" timestamp,
    "lastModified" timestamp,
    "invitationId" varchar(256),
    "invitationExpiry" timestamp,
    "meecoConnectionId" varchar(256),
    "meecoUserId" varchar(256),
    PRIMARY KEY (id)
);
ALTER TABLE SCHEMA_NAME."client" ADD FOREIGN KEY ("orgId") REFERENCES SCHEMA_NAME."organisation" ("id");ALTER TABLE "mlcppapp_test"."client" ADD CONSTRAINT "meccoUser_org_un" UNIQUE ("orgId", "meecoUserId");
ALTER TABLE SCHEMA_NAME."client" ADD CONSTRAINT "meecoConnection_org_un" UNIQUE ("orgId", "meecoConnectionId");
ALTER TABLE SCHEMA_NAME."client" ADD CONSTRAINT "meecoConnection_org_un" UNIQUE ("orgId", "meecoConnectionId");

-- Subscription for clients.
CREATE TABLE SCHEMA_NAME."clientterm" (
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "clientId" uuid,
    "start" timestamp,
    "end" timestamp,
    "durationMonths" int,
    "status" SCHEMA_NAME.clientterm_status,
    "createdBy" varchar,
    "created" timestamp
);
ALTER TABLE SCHEMA_NAME."clientterm" ADD FOREIGN KEY ("clientId") REFERENCES SCHEMA_NAME."client" ("id");

-- Agent client reation
CREATE TABLE SCHEMA_NAME."agentclient" (
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "agentId" uuid,
    "clientId" uuid,
    "created" timestamp,
    "lastModified" timestamp
);
ALTER TABLE SCHEMA_NAME."agentclient" ADD FOREIGN KEY ("agentId") REFERENCES SCHEMA_NAME."agent" ("id");
ALTER TABLE SCHEMA_NAME."agentclient" ADD FOREIGN KEY ("clientId") REFERENCES SCHEMA_NAME."client" ("id");

-- Audit entry
CREATE TABLE SCHEMA_NAME."audit" (
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "orgId" uuid,
    "agentId" uuid,
    "clientId" uuid,
    "action" varchar(64),
    "details" text,
    "time" timestamp
);

-- Users activities records
CREATE TABLE SCHEMA_NAME."activities" (
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "agentId" uuid,
    "clientId" uuid,
    "title" varchar,
    "name" varchar,
    "message" varchar,
    "section" varchar,
    "read" boolean,
    "created" timestamp
);
ALTER TABLE SCHEMA_NAME."activities" ADD FOREIGN KEY ("agentId") REFERENCES SCHEMA_NAME."agent" ("id");
ALTER TABLE SCHEMA_NAME."activities" ADD FOREIGN KEY ("clientId") REFERENCES SCHEMA_NAME."client" ("id");

CREATE TABLE SCHEMA_NAME."unreadmessages" (
    "id" bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "messageId" varchar,
    "orgId" uuid,
    "agentId" uuid,
    "clientId" uuid
);
ALTER TABLE SCHEMA_NAME."unreadmessages" ADD FOREIGN KEY ("orgId") REFERENCES SCHEMA_NAME."organisation" ("id");
ALTER TABLE SCHEMA_NAME."unreadmessages" ADD FOREIGN KEY ("agentId") REFERENCES SCHEMA_NAME."agent" ("id");
ALTER TABLE SCHEMA_NAME."unreadmessages" ADD FOREIGN KEY ("clientId") REFERENCES SCHEMA_NAME."client" ("id");